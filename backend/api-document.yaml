openapi: 3.0.2
info:
  title: ミリしらプラットフォーム
  description: |-
    <b>ミリしらプラットフォーム API仕様</b><br>
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/
paths:
  /test/:
    get:
      summary: TestAPI
      description: |
        TestAPI.<br>
      responses:
        200:
          description: A successful response.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/TestGetResponse'
  /questions/:
    get:
      summary: 問題一覧を取得するAPI
      description: |
        問題一覧を取得する.<br>
        ユーザが指定した問題タイトルをもとに検索を行い、問題一覧を取得する<br>
        title(問題タイトル)を指定しない場合は全問題を取得する
      parameters:
        - name: title
          in: query
          description: 問題のタイトル
          required: false
          example: 鬼滅の刃
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsGetResponse'
    
    post:
      summary: 新しい問題を登録するAPI
      description: |
        ユーザが作成した問題の登録を行う<br>
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionsPostRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  description: "タイトル"
                  type: string
                  example: "鬼滅の刃 ミリしら"
                pictures:
                  type: array
                  description: "画像ファイル"
                  items:
                    type: string
                    format: binary
                creator_name:
                  description: "作成者名"
                  type: string

        required: true
      responses:
        200:
          description: A successful response.                
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsPostResponse'
  
  
  /answers/:
    get:
      summary: 回答一覧を取得するAPI
      description: |
        問題に対する回答一覧を取得する.<br>
      parameters:
        - name: question_id
          in: query
          description: 問題ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswersGetResponse'
    post:
      summary: 回答を登録するAPI
      description: |
        回答の登録を行う.<br>
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswersPostRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswersPostResponse'

  /answers/{answer_id}/:
    get:
      summary: 特定の回答を取得するAPI
      description: |
        特定の回答を取得する.<br>
      parameters:
        - name: answer_id
          in: path
          description: 回答ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerGetResponse'
                
components:
  schemas:
    TestGetResponse:
      type: object
      properties:
        data:
          type: string
            
    QuestionsGetResponse:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/GetQuestionInfo'
          description: 問題集一覧
    
    QuestionsPostRequest:
      type: object
      properties:
        title:
          type: string
          description: 問題のタイトル
          example: 鬼滅の刃 ミリしら
          maxLength: 15
          minLength: 1
        pictures:
          type: array
          items:
            type: string
            example: YWJjZGVmZw==
            description: 画像(base64)
          description: 画像一覧
        creator_name:
          type: string
          example: hk
          maxLength: 15
          minLength: 1
          description: 問題作成者名

    QuestionsPostResponse:
      type: object
      properties:
        question_id:
          type: integer
          description: 登録した問題のID

    AnswersGetResponse:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/GetAnswerInfo'
          description: 回答一覧
    
    AnswersPostRequest:
      type: object
      properties:
        question_id:
          type: integer
          description: 質問ID
        characters:
          type: array
          items:
            $ref: '#/components/schemas/PostAnswerInfo'
          description: 回答
        answerer_name:
          type: string
          example: hira
          maxLength: 15
          minLength: 1
          description: 回答者名

    AnswersPostResponse:
      type: object
      properties:
        answer_id:
          type: integer
          description: 登録した回答のID

    AnswerGetResponse:
      type: object
      properties:
        characters:
          items:
            $ref: '#/components/schemas/PostAnswerInfo'
          description: 特定の回答情報
          


    GetQuestionInfo:
      type: object
      properties:
        question_id:
          type: integer
          description: 問題ID
        title:
          type: string
          example: 鬼滅の刃 ミリしら
          description: 問題のタイトル
          maxLength: 15
          minLength: 1
        pictures:
          type: array
          items:
            $ref: '#/components/schemas/PictureInfo'
          description: 画像一覧
        creator_name:
          type: string
          example: hk
          description: 問題作成者名
          maxLength: 15
          minLength: 1
        create_at:
          type: string
          example: '2022-06-28T06:47:20.347612Z'
          format: date-time
          description: 回答日時


    PictureInfo:
      type: object
      properties:
          picture_id:
            type: integer
            description: 写真ID
          picture:
            type: string
            example: YWJjZGVmZw==
            description: 写真(base64)
      description: 写真IDと写真

    GetAnswerInfo:
      type: object
      properties:
        answer_id:
          type: integer
          description: 回答ID
        answerer_name:
          type: string
          example: hira
          description: 回答者名
          maxLength: 15
          minLength: 1
        create_at:
          type: string
          example: '2022-06-28T06:47:20.347612Z'
          format: date-time
          description: 回答日時
          
    PostAnswerInfo:
      type: object
      properties:
        picture_id:
          type: integer
          description: 回答ID
        character_name:
          type: string
          example: 炭治郎
          description: 画像に対する名前
          maxLength: 11
          minLength: 1
        character_explanation:
          type: string
          example: 優しい人で強い
          maxLength: 30
          minLength: 1
          description: 画像に対する説明